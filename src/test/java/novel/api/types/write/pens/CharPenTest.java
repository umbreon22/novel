package novel.api.types.write.pens;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.List;

public class CharPenTest extends PenTest {
    @Test
    void charsTest() {
        char[] data = {'a', 'b', 'c'};
        var singlePen = newPen();
        for(var d : data) singlePen.chars(d);

        var varArgsPen = newPen();
        varArgsPen.chars(data);
        Assertions.assertEquals(singlePen.queue(), varArgsPen.queue());

        var supplierPen = newPen();
        for(var d : data) supplierPen.chars(()->d);
        Assertions.assertEquals(singlePen.queue(), supplierPen.queue());

        var matrixPenQueue = writeClonedMatrix(data, DataPen::chars).queue();
        assertClonedMatrixEqualsSource(
            boxedArray(data),
            matrixPenQueue
        );
    }

    @Test
    @Override
    void testIterable() {
        testIterable(List.of('a', 'b'), CharPen::chars);
    }

}
