package novel.api.types.write.pens;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.List;

public class FloatPenTest extends PenTest {
    @Test
    void floatsTest() {
        float[] data = {1f, 2f, 3f};
        var singlePen = newPen();
        for(var d : data) singlePen.floats(d);

        var varArgsPen = newPen();
        varArgsPen.floats(data);
        Assertions.assertEquals(singlePen.queue(), varArgsPen.queue());

        var supplierPen = newPen();
        for(var d : data) supplierPen.floats(()->d);
        Assertions.assertEquals(singlePen.queue(), supplierPen.queue());

        var matrixPenQueue = writeClonedMatrix(data, FloatPen::floats).queue();
        assertClonedMatrixEqualsSource(
            boxedArray(data),
            matrixPenQueue
        );
    }

    @Test
    @Override
    void testIterable() {
        testIterable(List.of(100f, 69f), FloatPen::floats);
    }
}
